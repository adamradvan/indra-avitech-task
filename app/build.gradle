plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'eu.radvan'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

	// https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core-jakarta
    implementation 'org.hibernate:hibernate-core-jakarta:5.6.15.Final'

	// https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'

    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation 'com.h2database:h2:2.1.214'

    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation 'com.zaxxer:HikariCP:5.0.1'
    // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-hikaricp
    implementation 'org.hibernate.orm:hibernate-hikaricp:6.2.3.Final'



    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    // ULID to replace UUID https://github.com/ulid/spec
    implementation 'de.huxhorn.sulky:de.huxhorn.sulky.ulid:8.3.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.7'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.4.7'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    implementation 'ch.qos.logback:logback-core:1.4.7'



//	testImplementation("org.junit.jupiter:junit-jupiter:5.8.1")
//	testImplementation("org.mockito:mockito-core:3.11.2")

}

compileJava {
    options.encoding = "UTF-8"
}
compileTestJava {
    options.encoding = "UTF-8"
}

tasks.named('test') {
    useJUnitPlatform()
}


